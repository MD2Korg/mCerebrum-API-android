apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release' // must be applied after your artifact generating plugin (eg. java / com.android.library)
apply from: 'versioning.gradle'

version = '0.0.1-RC3'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.novoda:bintray-release:0.9'
    }
}
publish {
    userOrg = 'md2korg'
    repoName = 'mCerebrum'
    groupId = 'org.md2k.mcerebrumapi'
    artifactId = 'core'
    publishVersion = version
    desc = 'Core library to connect to mCerebrum'
    website = 'https://github.com/MD2Korg/mCerebrum-API-android'
}
android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode buildVersionCode()
        versionName version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            libraryVariants.all { variant ->
                variant.outputs.all { output ->
                    if (outputFile != null && outputFileName.endsWith('.aar')) {
                        outputFileName = "${archivesBaseName}-${version}.aar"
                    }
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.code.gson:gson:2.8.5'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.21.0'
    androidTestImplementation 'androidx.test:runner:1.1.2-alpha01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.2-alpha01'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}
